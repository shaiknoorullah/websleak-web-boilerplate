/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    'global-config': GlobalConfig;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'global-config': GlobalConfigSelect<false> | GlobalConfigSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock | HomeBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
        | DateField
        | FileField
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DateField".
 */
export interface DateField {
  name: string;
  label?: string | null;
  width?: number | null;
  defaultValue?: string | null;
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'date';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FileField".
 */
export interface FileField {
  name: string;
  label?: string | null;
  width?: number | null;
  /**
   * Comma-separated mime types or extensions (e.g., "image/*,.pdf")
   */
  accept?: string | null;
  required?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'file';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HomeBlock".
 */
export interface HomeBlock {
  title: string;
  pageType: 'home' | 'rider' | 'restaurant';
  slug: string;
  metaTitle?: string | null;
  metaDesc?: string | null;
  homeSections?:
    | {
        type: 'hero' | 'features' | 'registration' | 'testimonials' | 'faqs';
        heroHeading?: string | null;
        heroSubheading?: string | null;
        heroImg?: (number | null) | Media;
        heroWaitlistText?: string | null;
        heroButtonText?: string | null;
        heroPlaceholder?: string | null;
        featuresHeading?: string | null;
        featuresList?:
          | {
              title: string;
              desc?: string | null;
              icon?: (number | null) | Media;
              id?: string | null;
            }[]
          | null;
        regType?: ('rider' | 'restaurant' | 'both') | null;
        riderHeading?: string | null;
        riderDesc?: string | null;
        riderBtnText?: string | null;
        riderImg?: (number | null) | Media;
        restHeading?: string | null;
        restDesc?: string | null;
        restBtnText?: string | null;
        restImg?: (number | null) | Media;
        testimonialHeading?: string | null;
        testimonialSubhead?: string | null;
        testimonialList?:
          | {
              name: string;
              role?: string | null;
              quote: string;
              rating?: number | null;
              photo?: (number | null) | Media;
              id?: string | null;
            }[]
          | null;
        faqHeading?: string | null;
        faqList?:
          | {
              question: string;
              answer: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  riderHdrTitle?: string | null;
  riderHdrSubtitle?: string | null;
  riderHdrImg?: (number | null) | Media;
  riderBasicTitle?: string | null;
  riderNameOn?: boolean | null;
  riderNameLbl?: string | null;
  riderNameReq?: boolean | null;
  riderEmailOn?: boolean | null;
  riderEmailLbl?: string | null;
  riderEmailReq?: boolean | null;
  riderPhoneOn?: boolean | null;
  riderPhoneLbl?: string | null;
  riderPhoneReq?: boolean | null;
  riderDobOn?: boolean | null;
  riderDobLbl?: string | null;
  riderDobReq?: boolean | null;
  riderGenderOn?: boolean | null;
  riderGenderLbl?: string | null;
  riderGenderReq?: boolean | null;
  riderGenderOpts?: string | null;
  riderIdTitle?: string | null;
  riderGovIdOn?: boolean | null;
  riderGovIdLbl?: string | null;
  riderGovIdReq?: boolean | null;
  riderLicenseOn?: boolean | null;
  riderLicenseLbl?: string | null;
  riderLicenseReq?: boolean | null;
  riderPhotoOn?: boolean | null;
  riderPhotoLbl?: string | null;
  riderPhotoReq?: boolean | null;
  riderVehRegOn?: boolean | null;
  riderVehRegLbl?: string | null;
  riderVehRegReq?: boolean | null;
  riderAddrOn?: boolean | null;
  riderAddrLbl?: string | null;
  riderAddrReq?: boolean | null;
  riderBankTitle?: string | null;
  riderBankAccOn?: boolean | null;
  riderBankAccLbl?: string | null;
  riderBankAccReq?: boolean | null;
  riderUpiOn?: boolean | null;
  riderUpiLbl?: string | null;
  riderUpiReq?: boolean | null;
  riderWorkTitle?: string | null;
  riderHoursOn?: boolean | null;
  riderHoursLbl?: string | null;
  riderHoursReq?: boolean | null;
  riderDelTypeOn?: boolean | null;
  riderDelTypeLbl?: string | null;
  riderDelTypeReq?: boolean | null;
  riderDelTypeOpts?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  riderOtherTitle?: string | null;
  riderEmergOn?: boolean | null;
  riderEmergLbl?: string | null;
  riderEmergReq?: boolean | null;
  riderRefCodeOn?: boolean | null;
  riderRefCodeLbl?: string | null;
  riderRefCodeReq?: boolean | null;
  riderTermsOn?: boolean | null;
  riderTermsLbl?: string | null;
  riderTermsReq?: boolean | null;
  riderSubmitBtn?: string | null;
  riderSuccessMsg?: string | null;
  riderEmailNotify?: boolean | null;
  riderFaqOn?: boolean | null;
  riderFaqTitle?: string | null;
  riderFaqList?:
    | {
        question: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  restHdrTitle?: string | null;
  restHdrSubtitle?: string | null;
  restHdrImg?: (number | null) | Media;
  restBasicTitle?: string | null;
  restNameOn?: boolean | null;
  restNameLbl?: string | null;
  restNameReq?: boolean | null;
  restOwnerOn?: boolean | null;
  restOwnerLbl?: string | null;
  restOwnerReq?: boolean | null;
  restEmailOn?: boolean | null;
  restEmailLbl?: string | null;
  restEmailReq?: boolean | null;
  restPhoneOn?: boolean | null;
  restPhoneLbl?: string | null;
  restPhoneReq?: boolean | null;
  restBizTitle?: string | null;
  restAddrOn?: boolean | null;
  restAddrLbl?: string | null;
  restAddrReq?: boolean | null;
  restRegNumOn?: boolean | null;
  restRegNumLbl?: string | null;
  restRegNumReq?: boolean | null;
  restHalalOn?: boolean | null;
  restHalalLbl?: string | null;
  restHalalReq?: boolean | null;
  restHalalFile?: boolean | null;
  restGstOn?: boolean | null;
  restGstLbl?: string | null;
  restGstReq?: boolean | null;
  restMenuTitle?: string | null;
  restCuisineOn?: boolean | null;
  restCuisineLbl?: string | null;
  restCuisineReq?: boolean | null;
  restHoursOn?: boolean | null;
  restHoursLbl?: string | null;
  restHoursReq?: boolean | null;
  restPrepOn?: boolean | null;
  restPrepLbl?: string | null;
  restPrepReq?: boolean | null;
  restFinTitle?: string | null;
  restBankOn?: boolean | null;
  restBankLbl?: string | null;
  restBankReq?: boolean | null;
  restUpiOn?: boolean | null;
  restUpiLbl?: string | null;
  restUpiReq?: boolean | null;
  restDocsTitle?: string | null;
  restLicenseOn?: boolean | null;
  restLicenseLbl?: string | null;
  restLicenseReq?: boolean | null;
  restLicenseFile?: boolean | null;
  restLogoOn?: boolean | null;
  restLogoLbl?: string | null;
  restLogoReq?: boolean | null;
  restLogoFile?: boolean | null;
  restMenuFileOn?: boolean | null;
  restMenuFileLbl?: string | null;
  restMenuFileReq?: boolean | null;
  restMenuFileFile?: boolean | null;
  restKitchenOn?: boolean | null;
  restKitchenLbl?: string | null;
  restKitchenReq?: boolean | null;
  restKitchenFile?: boolean | null;
  restOtherTitle?: string | null;
  restDeliveryOn?: boolean | null;
  restDeliveryLbl?: string | null;
  restDeliveryReq?: boolean | null;
  restDeliveryTxtArea?: boolean | null;
  restTermsOn?: boolean | null;
  restTermsLbl?: string | null;
  restTermsReq?: boolean | null;
  restSubmitBtn?: string | null;
  restSuccessMsg?: string | null;
  restEmailNotify?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'home-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-config".
 */
export interface GlobalConfig {
  id: number;
  name: string;
  logo?: (number | null) | Media;
  favicon?: (number | null) | Media;
  fonts?:
    | {
        name: string;
        value: string;
        source?: ('google' | 'custom') | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  colorPalette?:
    | {
        name: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'posts';
        value: number | Post;
      }
    | {
        relationTo: 'pages';
        value: number | Page;
      };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'global-config';
        value: number | GlobalConfig;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        'home-block'?: T | HomeBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HomeBlock_select".
 */
export interface HomeBlockSelect<T extends boolean = true> {
  title?: T;
  pageType?: T;
  slug?: T;
  metaTitle?: T;
  metaDesc?: T;
  homeSections?:
    | T
    | {
        type?: T;
        heroHeading?: T;
        heroSubheading?: T;
        heroImg?: T;
        heroWaitlistText?: T;
        heroButtonText?: T;
        heroPlaceholder?: T;
        featuresHeading?: T;
        featuresList?:
          | T
          | {
              title?: T;
              desc?: T;
              icon?: T;
              id?: T;
            };
        regType?: T;
        riderHeading?: T;
        riderDesc?: T;
        riderBtnText?: T;
        riderImg?: T;
        restHeading?: T;
        restDesc?: T;
        restBtnText?: T;
        restImg?: T;
        testimonialHeading?: T;
        testimonialSubhead?: T;
        testimonialList?:
          | T
          | {
              name?: T;
              role?: T;
              quote?: T;
              rating?: T;
              photo?: T;
              id?: T;
            };
        faqHeading?: T;
        faqList?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
        id?: T;
      };
  riderHdrTitle?: T;
  riderHdrSubtitle?: T;
  riderHdrImg?: T;
  riderBasicTitle?: T;
  riderNameOn?: T;
  riderNameLbl?: T;
  riderNameReq?: T;
  riderEmailOn?: T;
  riderEmailLbl?: T;
  riderEmailReq?: T;
  riderPhoneOn?: T;
  riderPhoneLbl?: T;
  riderPhoneReq?: T;
  riderDobOn?: T;
  riderDobLbl?: T;
  riderDobReq?: T;
  riderGenderOn?: T;
  riderGenderLbl?: T;
  riderGenderReq?: T;
  riderGenderOpts?: T;
  riderIdTitle?: T;
  riderGovIdOn?: T;
  riderGovIdLbl?: T;
  riderGovIdReq?: T;
  riderLicenseOn?: T;
  riderLicenseLbl?: T;
  riderLicenseReq?: T;
  riderPhotoOn?: T;
  riderPhotoLbl?: T;
  riderPhotoReq?: T;
  riderVehRegOn?: T;
  riderVehRegLbl?: T;
  riderVehRegReq?: T;
  riderAddrOn?: T;
  riderAddrLbl?: T;
  riderAddrReq?: T;
  riderBankTitle?: T;
  riderBankAccOn?: T;
  riderBankAccLbl?: T;
  riderBankAccReq?: T;
  riderUpiOn?: T;
  riderUpiLbl?: T;
  riderUpiReq?: T;
  riderWorkTitle?: T;
  riderHoursOn?: T;
  riderHoursLbl?: T;
  riderHoursReq?: T;
  riderDelTypeOn?: T;
  riderDelTypeLbl?: T;
  riderDelTypeReq?: T;
  riderDelTypeOpts?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  riderOtherTitle?: T;
  riderEmergOn?: T;
  riderEmergLbl?: T;
  riderEmergReq?: T;
  riderRefCodeOn?: T;
  riderRefCodeLbl?: T;
  riderRefCodeReq?: T;
  riderTermsOn?: T;
  riderTermsLbl?: T;
  riderTermsReq?: T;
  riderSubmitBtn?: T;
  riderSuccessMsg?: T;
  riderEmailNotify?: T;
  riderFaqOn?: T;
  riderFaqTitle?: T;
  riderFaqList?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  restHdrTitle?: T;
  restHdrSubtitle?: T;
  restHdrImg?: T;
  restBasicTitle?: T;
  restNameOn?: T;
  restNameLbl?: T;
  restNameReq?: T;
  restOwnerOn?: T;
  restOwnerLbl?: T;
  restOwnerReq?: T;
  restEmailOn?: T;
  restEmailLbl?: T;
  restEmailReq?: T;
  restPhoneOn?: T;
  restPhoneLbl?: T;
  restPhoneReq?: T;
  restBizTitle?: T;
  restAddrOn?: T;
  restAddrLbl?: T;
  restAddrReq?: T;
  restRegNumOn?: T;
  restRegNumLbl?: T;
  restRegNumReq?: T;
  restHalalOn?: T;
  restHalalLbl?: T;
  restHalalReq?: T;
  restHalalFile?: T;
  restGstOn?: T;
  restGstLbl?: T;
  restGstReq?: T;
  restMenuTitle?: T;
  restCuisineOn?: T;
  restCuisineLbl?: T;
  restCuisineReq?: T;
  restHoursOn?: T;
  restHoursLbl?: T;
  restHoursReq?: T;
  restPrepOn?: T;
  restPrepLbl?: T;
  restPrepReq?: T;
  restFinTitle?: T;
  restBankOn?: T;
  restBankLbl?: T;
  restBankReq?: T;
  restUpiOn?: T;
  restUpiLbl?: T;
  restUpiReq?: T;
  restDocsTitle?: T;
  restLicenseOn?: T;
  restLicenseLbl?: T;
  restLicenseReq?: T;
  restLicenseFile?: T;
  restLogoOn?: T;
  restLogoLbl?: T;
  restLogoReq?: T;
  restLogoFile?: T;
  restMenuFileOn?: T;
  restMenuFileLbl?: T;
  restMenuFileReq?: T;
  restMenuFileFile?: T;
  restKitchenOn?: T;
  restKitchenLbl?: T;
  restKitchenReq?: T;
  restKitchenFile?: T;
  restOtherTitle?: T;
  restDeliveryOn?: T;
  restDeliveryLbl?: T;
  restDeliveryReq?: T;
  restDeliveryTxtArea?: T;
  restTermsOn?: T;
  restTermsLbl?: T;
  restTermsReq?: T;
  restSubmitBtn?: T;
  restSuccessMsg?: T;
  restEmailNotify?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-config_select".
 */
export interface GlobalConfigSelect<T extends boolean = true> {
  name?: T;
  logo?: T;
  favicon?: T;
  fonts?:
    | T
    | {
        name?: T;
        value?: T;
        source?: T;
        url?: T;
        id?: T;
      };
  colorPalette?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        date?: T | DateFieldSelect<T>;
        file?: T | FileFieldSelect<T>;
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DateField_select".
 */
export interface DateFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  width?: T;
  defaultValue?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FileField_select".
 */
export interface FileFieldSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  width?: T;
  accept?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ICustomButtonBlock".
 */
export interface ICustomButtonBlock {
  /**
   * Choose the HTML button type
   */
  buttonType: 'button' | 'submit' | 'reset';
  /**
   * The text to display on the button
   */
  text: string;
  /**
   * Add an external link (leave empty if using page reference)
   */
  url?: string | null;
  /**
   * Link to an internal page (takes precedence over external URL)
   */
  internalLink?: {
    relationTo: 'pages';
    value: number | Page;
  } | null;
  newTab?: boolean | null;
  size?: ('xs' | 'sm' | 'md' | 'lg' | 'xl') | null;
  variant?:
    | (
        | 'primary'
        | 'secondary'
        | 'success'
        | 'danger'
        | 'warning'
        | 'info'
        | 'light'
        | 'dark'
        | 'outline-primary'
        | 'outline-secondary'
        | 'ghost'
        | 'link'
      )
    | null;
  width?: ('auto' | 'full') | null;
  hasIcon?: boolean | null;
  iconConfig?: {
    iconName?:
      | ('arrow-right' | 'arrow-left' | 'download' | 'upload' | 'external-link' | 'plus' | 'minus' | 'check' | 'x')
      | null;
    iconPosition?: ('left' | 'right') | null;
    iconSize?: ('sm' | 'md' | 'lg') | null;
  };
  /**
   * Fine-tune the appearance of the button
   */
  advancedStyling?: {
    /**
     * Override text color (e.g., #ffffff or rgb(255,255,255))
     */
    textColor?: string | null;
    /**
     * Override background color
     */
    backgroundColor?: string | null;
    borderRadius?: ('none' | 'sm' | 'md' | 'lg' | 'full') | null;
    borderWidth?: ('0' | '1' | '2' | '4') | null;
    /**
     * Override border color
     */
    borderColor?: string | null;
    /**
     * Left/right padding
     */
    paddingHorizontal?: ('0' | '1' | '2' | '4' | '6' | '8') | null;
    /**
     * Top/bottom padding
     */
    paddingVertical?: ('0' | '1' | '2' | '3' | '4' | '5') | null;
    shadow?: ('none' | 'sm' | 'md' | 'lg') | null;
    fontWeight?: ('normal' | 'medium' | 'semibold' | 'bold') | null;
    /**
     * Add custom Tailwind classes (advanced)
     */
    customClasses?: string | null;
  };
  interactive?: {
    hoverEffect?: ('none' | 'darken' | 'lighten' | 'grow' | 'shrink' | 'raise') | null;
    clickEffect?: ('none' | 'shrink' | 'sink') | null;
    transitionSpeed?: ('fast' | 'normal' | 'slow') | null;
  };
  accessibility?: {
    /**
     * Screen reader text (defaults to button text if empty)
     */
    ariaLabel?: string | null;
    /**
     * Text shown on hover (optional)
     */
    title?: string | null;
  };
  advanced?: {
    behavior?: ('normal' | 'smoothScroll' | 'modal') | null;
    /**
     * ID of element to scroll to or modal to open
     */
    targetId?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'customButton';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}